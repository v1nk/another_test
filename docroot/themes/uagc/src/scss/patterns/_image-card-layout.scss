@use "../base/colors" as *;
@use "../base/mixins" as *;
@use "../base/typographyMixins" as *;
@use "../base/vars" as *;

.image-cards {
  @include globalGutters;
  width: 100%;

  @media (min-width: $desktop-medium-large) {
    &:not(.columns__left &) {
      padding: {
        left: 0;
        right: 0;
      }
    }
  }

  &.\--grey-background {
    background-color: $lighterGray;
  }

  &__red-line {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      border-top: 2px solid $azRed;
      width: 80px;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &__heading {
    color: $azBlue;
    font-weight: 500;
    text-align: center;
    margin: {
      top: 24px;
      bottom: 24px;
    }

    span {
      padding: {
        left: 6px;
      }

      &:first-child {
        padding: {
          left: 0;
        }
      }
    }

    .--navy-heading,
    .--red-heading {
      @include rems(28px);
      line-height: 1.142857;

      @media (min-width: $tablet) {
        @include rems(36px);
        line-height: 1.33333333333;
      }
    }

    .--red-heading {
      color: $azRed;
    }
  }

  &__content {
    color: $black;
    @include rems(20px);
    line-height: 1.2;
    text-align: center;
    max-width: 1216px;
    margin: {
      left: auto;
      right: auto;
      bottom: 32px;
    }

    // additional styling for wysiwyg
    p,
    li {
      @include rems(20px);
      line-height: 1.2;
      margin: 0;

      @media (min-width: $tablet) {
        @include rems(24px);
        line-height: 1.33333333333;
      }
    }

    p {
      color: $black;
    }

    strong,
    b {
      font-weight: 500;
    }

    em,
    i {
      font-style: italic;
    }

    sup {
      vertical-align: super;
      font-size: smaller;
    }

    sub {
      vertical-align: sub;
      font-size: smaller;
    }

    ul {
      list-style: disc;
    }

    ol {
      list-style: number;
    }

    ul,
    ol {
      padding: {
        left: 20px;
      }
    }

    h1,
    h2,
    h3,
    h4,
    h5 {
      color: $black;
    }
    h1 {
      @include h1;
      @include marginMedium;
    }
    h2 {
      @include h2;
      @include marginMedium;
    }
    h3 {
      @include h3;
      @include marginMedium;
    }
    h4 {
      @include h4;
      @include marginMedium;
    }
    h5 {
      @include h5;
      @include marginMedium;
    }
  }

  &__card-layout {
    display: grid;
    grid-template-columns: repeat(1, minmax(225px, 1fr));
    gap: 32px;

    @media (min-width: $tablet) {
      grid-template-columns: repeat(4, 1fr);
    }

    @media (min-width: $desktop) {
      grid-template-columns: repeat(6, 1fr);
    }
    @media (min-width: $desktop-medium-large) {
      &:not(.columns__left &) {
        max-width: 1440px;
        margin: {
          left: auto;
          right: auto;
        }
      }
    }
  }

  &__card-container {
    display: flex;
    flex-direction: column;
    background: white;
    border: 1px solid $lightGray;
    box-sizing: border-box;
    border-radius: 16px;
    text-decoration: none;
    transition: box-shadow 0.3s ease-in-out;

    &:hover {
      box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.06);
    }

    @media (min-width: $tablet) {
      grid-column: span 2;

      .--left-align-cards & {
        &:last-child:nth-child(3n - 2) {
          grid-column-end: unset;
        }
      }
    }

    @media (min-width: $desktop) {
      grid-column: span 2;

      // Centering two orphan items in three card layout (I defined the css grid on desktop to 6 columns above where each card spans 2 columns)
      &:last-child:nth-child(3n - 1) {
        grid-column-end: -2;
      }

      &:nth-last-child(2):nth-child(3n + 1) {
        grid-column-end: 4;
      }

      // Centering single orphan in three card layout
      &:last-child:nth-child(3n - 2) {
        grid-column-end: 5;
      }

      .--left-align-cards & {
        &:last-child:nth-child(3n - 1) {
          grid-column-end: unset;
        }
        &:nth-last-child(2):nth-child(3n + 1) {
          grid-column-end: unset;
        }
      }
    }
  }

  &__image {
    display: block;
    width: 100%;
    border-top-left-radius: 16px;
    border-top-right-radius: 16px;
  }

  &__content-wrapper {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding: {
      top: 24px;
      bottom: 24px;
      left: 24px;
      right: 24px;
    }

    @media (min-width: $desktop) {
      padding: {
        bottom: 32px;
      }
    }
  }

  &__card-content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: flex-start;
  }

  &__card-heading {
    @include rems(20px);
    line-height: 1.2;
    color: $azBlue;
    font-weight: 500;
    text-decoration: none;
    transition: color 0.25s ease-in-out;
    margin: {
      bottom: 8px;
    }

    @media (min-width: $tablet) {
      @include rems(24px);
      line-height: 1.33333333333;
    }

    .image-cards__card-container:hover & {
      color: $azRed;
    }
  }

  &__card-text {
    @include rems(16px);
    line-height: 1.5;
    color: $black;
    text-align: left;
    margin: 0;
    flex-basis: 80%;
    transition: color 0.25s ease-in-out;
    padding: {
      bottom: 8px;
    }

    @media (min-width: $tablet) {
      @include rems(20px);
      line-height: 1.2;
      flex-basis: unset;
    }

    .image-cards__card-container:hover & {
      color: $azRed;
    }
  }

  &__card-cta-container {
    display: flex;
    color: $azRed;
    text-decoration: none;
    min-height: 32px;
    margin-top: auto;
  }

  &__degree-text {
    @include rems(14px);
    line-height: 1.2857;
    font-weight: 400;
    align-self: center;
    padding-right: 8px;

    @media (min-width: $tablet) {
      @include rems(16px);
      line-height: 1.5;
    }
  }

  &__card-cta {
    display: flex;
    align-self: center;
    margin: {
      left: auto;
    }
  }

  &__card-cta-text {
    @include rems(14px);
    line-height: 1.2857;
    font-weight: 500;
    align-self: center;
    padding: {
      right: 10px;
    }

    //Adding sentence case to buttons as requested
    &::first-letter {
      text-transform: capitalize;
    }
  }
}
