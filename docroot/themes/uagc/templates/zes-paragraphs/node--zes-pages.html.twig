{% set sidebar_class = content.field_sub_menu|render ? ' has-sidebar': '' %}
{% set submenu = content.field_sub_menu.0['#markup'] %}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--display-mode-' ~ view_mode|clean_class,
  ]
%}

{% set orderClass = '' %}




{% if ( node.field_dynamic_phone_numbers | length > 0) %}
<script>
  var phoneList = {};

  {% for item in node.field_dynamic_phone_numbers %}
    {% if item.entity.field_phone_key %}
      phoneList['{{ item.entity.field_phone_key.value }}']= '{{ item.entity.field_phone_value.value }}'
    {% endif %}
  {% endfor %}


  var queryString = window.location.search;
  if(queryString != '') {
    var phoneElement = document.querySelector('.site-header__cta-link.--phone');
    if(phoneElement) {
      queryString = queryString.substring(1);
      var queryParams = queryString.split('&');
      var qParams = {};
      for(var i = 0; i< queryParams.length; i++){
        var temp = queryParams[i].split("=");
        qParams[temp[0]] = temp[1];
      }
      var newNumber = phoneList[qParams.utm_phone];
      if(newNumber) {
        phoneElement.innerText = newNumber;
        phoneElement.href = "tel:"+newNumber;
      }
    }
  }
</script>
{% endif %}




{% if node.field_hide_modal_form.value == '1' %}
<script type="text/javascript"> 
  window.uagc_hide_modal = true;
</script>  
{% endif %}


<script type="text/javascript">
  window.ashfordlfs = window.ashfordlfs || {};
  window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }} = window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }} || {};

  {% if node.field_clientdocumentid.value != '' %}
    window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.clientdocumentid = '{{ node.field_clientdocumentid.value }}';
  {% endif %}

  {% if node.field_sourceid.value != '' %}
    window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.sourceid = '{{ node.field_sourceid.value }}';
  {% endif %}

  {% if node.field_revisionid.value != '' %}
    window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.revisionid = '{{ node.field_revisionid.value }}';
  {% endif %}

  {% if node.field_form_id_class	.value != '' %}
    window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.formidclass = '{{ node.field_form_id_class	.value }}';
  {% endif %}



  window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.degrees = [
  {% for key, item in node.field_degrees if key|first != '#' %}
  '{{item.entity.title.value}}',
  {% endfor %}
  ];
  
  window.ashfordlfs.{{ node.bundle ~ node.getCreatedTime() | clean_class }}.interests = [
  {% for key, item in node.field_interests if key|first != '#' %}
    '{{item.entity.name.value | raw}}',
  {% endfor %}
  ];




</script>



{% if node.field_switch_column_order.value == '1' %}
  {% set orderClass = '--swap-sides' %}

{% endif %}

{{ attach_library('uagc/zes') }}
{{ attach_library('uagc/lead-form-logic') }}
{{ attach_library('uagc/lead-form-cta-logic') }}

{% if node.field_use_new_menu.value == '1' %}
  {{ attach_library('uagc/main') }}
{% endif %}


<article{{ attributes.addClass(classes) }}>

{% if  node.field_use_sticky_sidebar.value == '1' %}

    <div class="twocolumn__container  {{orderClass}}">
      <div class="twocolumn__small"></div>
      <div class="twocolumn__large">


{% endif %}


        {{ content.field_feature_spaces_paragraphs }}
        {{ content.field_paragraphs }}
        
{% if  node.field_use_sticky_sidebar.value == '1' %}      
      </div>
    </div>
{% endif %}
  </article>
  



