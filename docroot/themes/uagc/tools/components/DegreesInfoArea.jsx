import React from 'react';
import styled from 'styled-components';
import breakpoints from '../helpers/breakpoints';
import pixelsToRems from '../helpers/pixelsToRems';

const Container = styled.div`
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    flex-basis: 100%;
    margin-bottom: 32px;

    &:not(:last-child) {
        margin-right: 32px;
    }
`;

const Row = styled.div`
    padding: 24px;
    width: 100%;
    border-radius: 16px;
    position: relative;

    &:nth-of-type(2n) {
        background-color: #F1F1F0;
    }

    ${breakpoints.large} {
        display: flex;
        padding: 32px;
    }
`;

const HeadingContainer = styled.div`
    display: flex;
    align-items: center;
    margin-bottom: 24px;

    ${breakpoints.large} {
        flex-direction: column-reverse;
        width: ${props => {
            if (props.$count === 3) {
                return 'calc(25% - 48px)';
            } else {
                return 'calc(33.33% - 38px)';
            }
        }};
        align-items: flex-end;
        justify-content: flex-end;
        flex-shrink: 0;
        margin-right: 32px;
        margin-bottom: 0;

        svg {
            width: 56px;
            height: 56px;
        }
    }
`;

const Heading = styled.h2`
    font-family: Fira Sans;
    font-style: normal;
    font-weight: 500;
    font-size: ${pixelsToRems(20)};
    line-height: ${pixelsToRems(24)};
    color: #0C234B;
    margin-left: 8px;
    

    ${breakpoints.large} {
        margin-bottom: 8px;
        margin-left: 0;
        text-align: right;
    }
`;

const Paragraphs = styled.div`
    margin-bottom: 0;
    
    p {
        font-family: Fira Sans;
        font-style: normal;
        font-weight: normal;
        font-size: ${pixelsToRems(16)};
        line-height: ${pixelsToRems(24)};
        color: #000000;

        &:not(:last-of-type) {
            margin-bottom: 16px;
        }
    }

    a {
        color: #0C234B;

        &:hover {
            text-decoration: underline;
        }
    }
`;

const Stat = styled.p`
    font-family: Fira Sans;
    font-style: normal;
    font-weight: 500;
    font-size: ${pixelsToRems(32)};
    line-height: ${pixelsToRems(40)};
    color: #0C234B;
    margin-bottom: 0;
`;

const StatInfo = styled.p`
    font-family: Fira Sans;
    font-style: normal;
    font-weight: 500;
    font-size: ${pixelsToRems(16)};
    line-height: ${pixelsToRems(24)};
    color: #0C234B;
    margin-bottom: 0;
`;

const ListItem = styled.li`
    display: flex;
    font-family: Fira Sans;
    font-style: normal;
    font-weight: normal;
    font-size: ${pixelsToRems(16)};
    line-height: ${pixelsToRems(24)};
    color: #111111;

    &::before {
        content: '';
        margin-top: 7px;
        background: #AB0520;
        width: 8px;
        height: 8px;
        border-radius: 4px;
        margin-right: 8px;
        flex-shrink: 0;
    }

    &:not(:last-of-type) {
        margin-bottom: 8px;
    }
`;

const InfoItem = styled.p`
    font-family: Fira Sans;
    font-style: normal;
    font-weight: normal;
    font-size: ${pixelsToRems(16)};
    line-height: ${pixelsToRems(24)};
    color: #111111;
    margin-bottom: 0;

    &:not(:last-of-type) {
        margin-bottom: 8px;
    }
`;

const RequestInformation = styled.a`
    color: #0C234B;
    font-family: Fira Sans;
    font-style: normal;
    font-weight: 500;
    font-size: ${pixelsToRems(16)};
    line-height: ${pixelsToRems(24)};
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 8px;
    background-color: #EF9600;
    border-radius: 20px;
    margin-top: 24px;
    margin-bottom: 16px;
`;

const DiscoverDegree = styled.a`
    color: #0C234B;
    font-family: Fira Sans;
    font-style: normal;
    font-weight: 500;
    font-size: ${pixelsToRems(16)};
    line-height: ${pixelsToRems(24)};
    width: 100%;
    display: flex;
    justify-content: center;
`;

const MultipleContainer = styled.div`
    display: flex;
    justify-content: space-between;
    width: 100%;
    
    > * {
        width: ${props => {
            if (props.$count === 3) {
                return 'calc(((100% + 48px) / 3) - (64px / 3))';
            } else if (props.$count === 2) {
                return 'calc(((100% + 48px) / 2) - (32px / 2))';
            } else { // just 1
                return '100%';
            }
        }};
        flex-shrink: 0;

        &:first-child, &:last-child {
            width: ${props => {
                if (props.$count === 3) {
                    return 'calc(((100% + 48px) / 3) - 24px - (64px / 3))';
                } else if (props.$count === 2) {
                    return 'calc(((100% + 48px) / 2) - 24px - (32px / 2))';
                } else { // just 1
                    return '100%';
                }
            }};
        }

        &:not(:first-child) {
            border-left: 1px solid #98A4AE;
            padding-left: 32px;
        }
    }

    ${breakpoints.large} {
        > * {
            width: ${props => {
                if (props.$count === 3) {
                    return 'calc(100% / 3)';
                } else {
                    return 'calc(100% / 2)';
                }
            }};
            padding-left: 32px;
            padding-right: 32px;
            flex-shrink: 0;

            &:first-child {
                width: ${props => {
                    if (props.$count === 3) {
                        return 'calc(100% / 3)';
                    } else {
                        return 'calc((100% / 2) + 32px)';
                    }
                }};
                border-left: 1px solid #98A4AE;
            }

            &:last-child {
                width: ${props => {
                    if (props.$count === 3) {
                        return 'calc((100% / 3) - 42px)';
                    } else {
                        return 'calc(100% / 2)';
                    }
                }};
            }
        }
    }
`;

const ActionsContainer = styled.div`
    width: 100%;
    display: flex;
    justify-content: space-between;
    
    > * {
        width: ${props => {
        if (props.$count === 3) {
            return 'calc((100% / 3) - (64px / 3))';
        } else if (props.$count === 2) {
            return 'calc((100% / 2) - (32px / 2))';
        } else { // just 1
            return '100%';
        }
    }};
        flex-shrink: 0;
    }

    ${breakpoints.large} {
        padding-left: 312px;
    }
`;

export default function DegreesInfoArea(props) {

    const degreeExtraMeta = (degreeID) => {
        const thisDegreeMeta = props.resultsDegreeMeta.find(resultMeta => resultMeta.simpleID == degreeID);
        if (thisDegreeMeta && thisDegreeMeta.more) {
            return thisDegreeMeta.more;
        } else {
            return false;
        }
    }

    return (
        <Container>
            <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg
                        width={56}
                        height={56}
                        fill="none"
                    >
                        <path
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                            d="M1 7h54v48H1z"
                        />
                        <path
                            d="m28 35 1.656 1.818L32 36.072l.526 2.402 2.402.526-.746 2.344L36 43l-1.818 1.656.746 2.344-2.402.526L32 49.928l-2.344-.746L28 51l-1.656-1.818-2.344.746-.526-2.402L21.072 47l.746-2.344L20 43l1.818-1.656L21.072 39l2.402-.526.526-2.402 2.344.746L28 35Z"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                        />
                        <path
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                            d="M23 21h10M7 43h8M41 43h8M17 27h22M9 15h38"
                        />
                        <path
                            d="m48 7 7.071 7.071M8.071 55.071l-7.07-7.07"
                            stroke="#AB0520"
                            strokeWidth={2}
                        />
                        <path
                            d="m55.071 48-7.07 7.071M1 14.071l7.071-7.07"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                        />
                    </svg>
                    <Heading>Degree Overview</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        const thisDegreeMeta = degreeExtraMeta(degree);

                        if (thisDegreeMeta) {
                            return <Paragraphs key={degree} dangerouslySetInnerHTML={{ __html: thisDegreeMeta.overview }} />
                        } else {
                            return <Paragraphs key={degree}></Paragraphs>
                        }
                    })}
                </MultipleContainer>
            </Row>
            <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg
                        width={58}
                        height={57}
                        fill="none"
                    >
                        <path
                            d="m29 1 2.704 5.965 6.807.6-5.136 4.285 1.503 6.336L29 14.87l-5.878 3.316 1.503-6.336-5.136-4.286 6.807-.6L29 1ZM18 38l2.704 5.965 6.807.6-5.136 4.285 1.503 6.336L18 51.87l-5.878 3.316 1.503-6.336-5.136-4.286 6.807-.6L18 38ZM41 38l2.704 5.965 6.807.6-5.136 4.285 1.503 6.336L41 51.87l-5.878 3.316 1.503-6.336-5.136-4.286 6.807-.6L41 38ZM11 16l2.704 5.965 6.807.6-5.136 4.285 1.503 6.336L11 29.87l-5.878 3.316 1.503-6.336-5.136-4.286 6.807-.6L11 16ZM47.5 16l2.569 5.965 6.466.6-4.879 4.285 1.428 6.336L47.5 29.87l-5.584 3.316 1.428-6.336-4.879-4.286 6.466-.6L47.5 16Z"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                        />
                    </svg>
                    <Heading>Major Learning Outcomes</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        const thisDegreeMeta = degreeExtraMeta(degree);

                        if (thisDegreeMeta) {
                            return (
                                <ol key={degree}>
                                    {thisDegreeMeta.learningOutcomes.map((learningOutcome, learningOutcomeIndex) => {
                                        return <ListItem key={learningOutcomeIndex}>{learningOutcome}</ListItem>
                                    })}
                                </ol>
                            )
                        } else {
                            return <ol key={degree} />
                        }

                    })}
                </MultipleContainer>
            </Row>
            <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg
                        width={56}
                        height={57}
                        fill="none"
                    >
                        <path
                            d="m1 45.818 19.103 7.491a9.999 9.999 0 0 0 3.651.69h20.519A2.727 2.727 0 0 0 47 51.273v0a2.727 2.727 0 0 0-2.727-2.727H26.03a5 5 0 0 1-3.163-1.128l-7.522-6.145"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                        />
                        <path
                            d="m1 34 16.694 2.083a7 7 0 0 1 4.344 2.272l3.686 4.109a2.803 2.803 0 0 1-.86 4.392v0a2.803 2.803 0 0 1-2.992-.344l-6.528-5.293"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                        />
                        <path
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                            d="M22 7.296h32V32H22z"
                        />
                        <path
                            d="M46.225 7.34V4.925a3 3 0 0 0-3-3h-9.929a3 3 0 0 0-3 3v2.413M36.222 18.037h4.741v5.37h-4.741zM54 19.111l-13.037 1.074M22 19.111l14.222 1.074"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                        />
                    </svg>
                    <Heading>Potential Jobs</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        const thisDegreeMeta = degreeExtraMeta(degree);

                        if (thisDegreeMeta) {
                            return (
                                <div key={degree}>
                                    {thisDegreeMeta.potentialJobs.map((potentialJob, potentialJobIndex) => {
                                        return <InfoItem key={potentialJobIndex}>{potentialJob}</InfoItem>
                                    })}
                                </div>
                            )
                        } else {
                            return <div key={degree} />
                        }
                    })}
                </MultipleContainer>
            </Row>
            <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg
                        width={56}
                        height={56}
                        fill="none"
                    >
                        <path
                            d="M11 20v10.363c8.56 10.183 22.44 10.183 31 0V20"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinejoin="round"
                        />
                        <path
                            clipRule="evenodd"
                            d="M26.186 1.076 1.37 13.893a.683.683 0 0 0 0 1.214l24.816 12.817a.683.683 0 0 0 .628 0L51.63 15.107a.683.683 0 0 0 0-1.214L26.814 1.076a.683.683 0 0 0-.628 0Z"
                            stroke="#AB0520"
                            strokeWidth={2}
                        />
                        <path d="M51.9 14.6v10.198" stroke="#AB0520" strokeWidth={2} />
                        <path
                            clipRule="evenodd"
                            d="M54.6 26.84a2.71 2.71 0 0 0-2.7-2.72 2.71 2.71 0 0 0-2.7 2.72 2.71 2.71 0 0 0 2.7 2.72 2.71 2.71 0 0 0 2.7-2.72Z"
                            stroke="#AB0520"
                            strokeWidth={2}
                        />
                        <ellipse
                            cx={4.5}
                            cy={48}
                            rx={3.5}
                            ry={7}
                            stroke="#AB0520"
                            strokeWidth={2}
                        />
                        <path
                            d="M4.5 51c.276 0 .5-1.343.5-3s-.224-3-.5-3M25.5 55c1.933 0 3.5-3.134 3.5-7s-1.567-7-3.5-7M34.5 55c1.933 0 3.5-3.134 3.5-7s-1.567-7-3.5-7"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                        />
                        <path
                            d="M5 41h47M5 55h47"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                        <path
                            d="M51.5 55c1.933 0 3.5-3.134 3.5-7s-1.567-7-3.5-7"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                        />
                        <path
                            d="m29 47.5 4.5 3.5 4.5-3.5"
                            stroke="#AB0520"
                            strokeWidth={2}
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                    </svg>
                    <Heading>Total Credit Hours</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        const thisDegreeMeta = degreeExtraMeta(degree);

                        if (thisDegreeMeta) {
                            return (
                                <div key={degree}>
                                    <Stat>{thisDegreeMeta.credits}</Stat>
                                    <StatInfo>{thisDegreeMeta.time}</StatInfo>
                                </div>
                            )
                        } else {
                            return <div key={degree} />
                        }
                    })}
                </MultipleContainer>
            </Row>

            {/* <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <g clipPath="url(#clip0_1717:40680)">
                            <path d="M23.8627 3.54185C23.6796 3.35885 23.3829 3.35885 23.1998 3.54185C22.2417 4.50002 21.5281 5.71929 21.1364 7.06783C21.1109 7.15511 21.083 7.24478 21.0533 7.33418C20.5696 8.78594 19.7162 9.8471 19.68 9.89163C19.6659 9.90893 19.651 9.92552 19.6356 9.94094C19.408 10.1685 19.0474 10.1868 18.7969 9.98346C18.6819 9.89013 18.6089 9.76413 18.5797 9.62955C18.5789 9.62627 18.5782 9.62294 18.5774 9.61966C18.5419 9.44238 18.5826 9.25117 18.7053 9.1001C18.7124 9.09133 19.4167 8.21463 19.825 7.04941C20.3824 5.45861 20.1401 4.08086 19.1242 3.06494C18.667 2.60777 18.0657 2.347 17.4309 2.33069C16.7868 2.31358 16.1875 2.55016 15.7425 2.9951C15.2857 3.4518 15.0501 4.06713 15.0791 4.72774C15.0943 5.07358 14.8253 5.36735 14.4794 5.38258C14.1337 5.398 13.8398 5.12871 13.8246 4.78291C13.7806 3.78105 14.1559 2.80577 14.8545 2.10719C15.8124 1.14935 17.226 0.827316 18.5435 1.26686C19.2543 1.50391 20.022 1.32536 20.5467 0.800691C20.7298 0.617644 20.7298 0.320832 20.5467 0.137738C20.3636 -0.0452617 20.0669 -0.0452617 19.8838 0.137738C19.6118 0.409707 19.2119 0.501582 18.84 0.377504C17.1834 -0.175105 15.4021 0.233551 14.1915 1.44414C13.3076 2.32821 12.8324 3.56013 12.8879 4.82402C12.9047 5.20464 13.057 5.54753 13.2958 5.80886L12.6502 6.45457C12.5885 6.34905 12.5132 6.25127 12.426 6.16413L12.3977 6.13577C11.8381 5.57627 10.9277 5.57622 10.3681 6.13582C9.80854 6.69541 9.80854 7.60582 10.3681 8.16536L10.3965 8.19377C10.4837 8.28091 10.5814 8.35614 10.6869 8.41788L9.89662 9.2081C9.77085 9.33386 9.68863 9.48639 9.64776 9.64741C9.48679 9.68828 9.33426 9.7705 9.20849 9.89622L8.41827 10.6864C8.35658 10.5809 8.28126 10.4832 8.19416 10.3961L8.1658 10.3677C7.60621 9.8081 6.6958 9.80814 6.13621 10.3677C5.57666 10.9273 5.57666 11.8377 6.13621 12.3973L6.16457 12.4256C6.25171 12.5127 6.34944 12.5881 6.45496 12.6498L5.80916 13.2955C5.5476 13.0566 5.20433 12.9043 4.82357 12.8875C3.56005 12.8317 2.3278 13.3071 1.44379 14.1911C0.233238 15.4016 -0.175512 17.1828 0.377051 18.8396C0.501082 19.2115 0.409254 19.6114 0.137285 19.8833C-0.0457617 20.0664 -0.0457617 20.3632 0.137285 20.5463C0.320379 20.7293 0.617098 20.7293 0.800238 20.5463C1.32491 20.0215 1.5036 19.2539 1.26641 18.543C0.82691 17.2254 1.14894 15.8118 2.10679 14.8541C2.80527 14.1556 3.77952 13.78 4.78246 13.8241C5.1283 13.8393 5.39732 14.1332 5.38218 14.479C5.36694 14.8248 5.0735 15.0932 4.72733 15.0787C4.06719 15.0498 3.45149 15.2851 2.99464 15.742C2.08157 16.655 2.11297 18.1721 3.06454 19.1237C3.8 19.8592 4.63583 20.1169 5.44621 20.1168C7.3296 20.1167 9.07508 18.7248 9.09993 18.7046C9.36871 18.4865 9.7649 18.5277 9.98305 18.7965C10.1864 19.0471 10.1681 19.4076 9.94082 19.635C9.92507 19.6507 9.90843 19.6657 9.89122 19.6796C9.84674 19.7158 8.78521 20.5693 7.33372 21.0529C7.24569 21.0823 7.15607 21.1102 7.06743 21.136C5.71883 21.5277 4.49961 22.2413 3.54149 23.1994C3.35844 23.3825 3.35844 23.6793 3.54149 23.8623C3.63304 23.9539 3.75299 23.9996 3.8729 23.9996C3.9929 23.9996 4.11285 23.9538 4.2044 23.8623C5.05115 23.0156 6.13161 22.3841 7.32894 22.0362C7.42926 22.0071 7.5306 21.9755 7.63007 21.9423C9.24158 21.4054 10.432 20.4481 10.4819 20.4076C10.5239 20.3735 10.5647 20.3368 10.6034 20.2982C11.1716 19.7298 11.2178 18.8303 10.7109 18.2058C10.7076 18.2016 10.704 18.1978 10.7007 18.1938L11.3497 17.5447C11.4115 17.6502 11.4868 17.748 11.5739 17.8351L11.6023 17.8634C12.1618 18.4229 13.0723 18.423 13.6318 17.8634C14.1914 17.3038 14.1914 16.3934 13.6318 15.8338L13.6035 15.8055C13.5164 15.7183 13.4186 15.643 13.3131 15.5813L14.1033 14.7911C14.2291 14.6653 14.3113 14.5128 14.3522 14.3518C14.5131 14.3109 14.6657 14.2287 14.7914 14.103L15.8247 13.0697C16.0023 12.8921 16.0723 12.631 16.0074 12.3881C15.943 12.1466 15.7533 11.9561 15.5123 11.891C15.428 11.8683 15.3536 11.8252 15.2912 11.7627L15.2629 11.7344C15.0688 11.5404 15.0688 11.2247 15.2629 11.0306C15.4568 10.8366 15.7725 10.8365 15.9666 11.0306L15.995 11.059C16.0574 11.1214 16.1006 11.1958 16.1233 11.2802C16.1883 11.521 16.3787 11.7108 16.6203 11.7752C16.8632 11.8402 17.1244 11.77 17.3019 11.5925L18.1936 10.7008C18.1978 10.7043 18.2017 10.708 18.206 10.7114C18.496 10.9468 18.8452 11.0629 19.1931 11.0629C19.5945 11.0629 19.994 10.9083 20.2985 10.6039C20.3367 10.5656 20.3735 10.5248 20.4078 10.4825C20.4483 10.4327 21.4056 9.24246 21.9427 7.63038C21.9763 7.5295 22.0079 7.42821 22.0365 7.32944C22.3844 6.13211 23.0159 5.05164 23.8626 4.20485C24.0458 4.02171 24.0458 3.72489 23.8627 3.54185ZM8.51033 17.9756C8.48108 17.9991 5.56461 20.2978 3.72749 18.4607C3.14141 17.8746 3.11005 16.9524 3.65755 16.4049C3.92624 16.1363 4.2929 15.998 4.68613 16.0152C5.288 16.0423 5.8258 15.7234 6.10916 15.2354L6.45519 15.5815C6.34827 15.6436 6.24913 15.7197 6.16072 15.808L6.13269 15.8362C5.86161 16.1072 5.71227 16.4676 5.71227 16.8509C5.71227 17.2343 5.86161 17.5947 6.13265 17.8657C6.69224 18.4252 7.60255 18.4252 8.16252 17.8654L8.19051 17.8374C8.27877 17.7491 8.3548 17.6501 8.41696 17.5432L8.71101 17.8373C8.64163 17.8775 8.57451 17.9236 8.51033 17.9756ZM13.4405 14.128L12.4072 15.1613C12.2296 15.3389 12.1596 15.6002 12.2245 15.8431C12.289 16.0846 12.4787 16.275 12.7196 16.34C12.8039 16.3627 12.8782 16.4059 12.9407 16.4683L12.969 16.4967C13.1631 16.6907 13.1631 17.0064 12.9691 17.2004C12.775 17.3943 12.4593 17.3944 12.2653 17.2004L12.2369 17.172C12.1745 17.1096 12.1313 17.0353 12.1086 16.951C12.0436 16.7101 11.8533 16.5204 11.6117 16.4559C11.3686 16.3908 11.1075 16.461 10.9299 16.6386L9.89666 17.6718C9.89352 17.675 9.88935 17.6763 9.88522 17.6766C9.88302 17.676 9.88087 17.6754 9.87866 17.6748C9.87618 17.674 9.87346 17.6738 9.87149 17.6718L8.83597 16.6364C8.70215 16.5025 8.52093 16.4297 8.33582 16.4297C8.27479 16.4297 8.21333 16.4376 8.15301 16.4539C7.91099 16.5191 7.72072 16.7096 7.65655 16.9514C7.63424 17.0353 7.58976 17.1124 7.52741 17.1747L7.49938 17.2028C7.30532 17.3967 6.98961 17.3969 6.79555 17.2028C6.70157 17.1088 6.64982 16.9839 6.64982 16.8509C6.64982 16.718 6.70157 16.5931 6.79588 16.4988L6.82386 16.4707C6.88686 16.4078 6.96191 16.3644 7.04694 16.3419C7.28863 16.2777 7.47927 16.0876 7.54443 15.8456C7.60996 15.6023 7.54011 15.3406 7.36208 15.1624L6.32765 14.128C6.32071 14.1211 6.32071 14.1098 6.32765 14.1029L7.36058 13.0699C7.36068 13.0698 7.36077 13.0697 7.36091 13.0696C7.53847 12.892 7.60851 12.6309 7.54363 12.388C7.47918 12.1465 7.28947 11.956 7.04849 11.8909C6.96421 11.8683 6.88982 11.8251 6.82743 11.7626L6.79907 11.7343C6.70508 11.6403 6.65333 11.5153 6.65333 11.3824C6.65333 11.2495 6.70508 11.1245 6.79907 11.0306C6.89305 10.9366 7.01802 10.8848 7.15091 10.8848C7.28385 10.8848 7.40882 10.9366 7.5028 11.0306L7.53116 11.0589C7.5936 11.1213 7.63677 11.1957 7.65946 11.28C7.72443 11.5209 7.91479 11.7106 8.15638 11.7751C8.39924 11.8398 8.66047 11.77 8.83813 11.5924L9.8714 10.5591C9.87833 10.5522 9.88963 10.5522 9.89657 10.5591L10.6759 11.3384C10.5909 11.3934 10.5115 11.4573 10.4398 11.529L10.4114 11.5573C9.8519 12.1169 9.8519 13.0273 10.4114 13.5869C10.6825 13.858 11.0429 14.0073 11.4262 14.0073C11.8096 14.0073 12.17 13.858 12.441 13.5869L12.4693 13.5586C12.542 13.4859 12.6057 13.4072 12.6603 13.3229L13.4404 14.1029C13.4474 14.1099 13.4474 14.1211 13.4405 14.128ZM17.6723 9.89632L16.8821 10.6864C16.8204 10.5809 16.7451 10.4832 16.658 10.3961L16.6296 10.3677C16.0701 9.8081 15.1596 9.80814 14.6001 10.3677C14.0405 10.9273 14.0405 11.8377 14.6001 12.3973L14.6284 12.4256C14.7156 12.5127 14.8133 12.5881 14.9188 12.6498L14.1286 13.44C14.1216 13.4469 14.1103 13.4469 14.1034 13.44L13.0929 12.4295C12.9187 12.2553 12.6715 12.185 12.4313 12.2418C12.1927 12.298 12.004 12.4702 11.9264 12.7023C11.9021 12.7754 11.8617 12.8404 11.8065 12.8956L11.7781 12.924C11.5841 13.118 11.2684 13.1179 11.0744 12.924C10.8804 12.73 10.8804 12.4143 11.0744 12.2202L11.1028 12.1919C11.158 12.1366 11.223 12.0963 11.2961 12.0718C11.5282 11.9943 11.7004 11.8055 11.7566 11.5669C11.8132 11.3268 11.7429 11.0795 11.5687 10.9054L10.5595 9.89618C10.5526 9.88924 10.5526 9.87794 10.5595 9.871L11.5928 8.83774C11.7704 8.66013 11.8404 8.39889 11.7755 8.15599C11.711 7.91444 11.5213 7.72403 11.2804 7.65907C11.1962 7.63638 11.1217 7.59316 11.0593 7.53072L11.0309 7.50236C10.8369 7.30835 10.8369 6.99264 11.0309 6.79863C11.225 6.60466 11.5406 6.60457 11.7347 6.79863L11.763 6.82699C11.8255 6.88943 11.8687 6.96382 11.8914 7.04805C11.9563 7.28889 12.1467 7.47864 12.3883 7.54314C12.6312 7.60807 12.8924 7.53808 13.0701 7.36047L14.1033 6.32721C14.1103 6.32027 14.1216 6.32027 14.1285 6.32721L15.1377 7.33643C15.312 7.51066 15.5593 7.58088 15.7994 7.52425C16.0381 7.46796 16.2268 7.29578 16.3042 7.06375C16.3286 6.99067 16.369 6.92566 16.424 6.87068L16.4526 6.84203C16.5466 6.74805 16.6716 6.6963 16.8044 6.6963C16.9374 6.6963 17.0624 6.74805 17.1563 6.84208C17.2503 6.93607 17.3021 7.06103 17.3021 7.19397C17.3021 7.32686 17.2503 7.45183 17.1563 7.54582L17.128 7.57413C17.0727 7.62939 17.0076 7.66975 16.9346 7.69418C16.7025 7.77166 16.5304 7.96043 16.4741 8.19907C16.4174 8.43907 16.4877 8.68638 16.6619 8.86071L17.6723 9.8711C17.6742 9.87297 17.6743 9.87555 17.6751 9.87789C17.6757 9.88028 17.6764 9.88263 17.677 9.88502C17.6766 9.8891 17.6754 9.89317 17.6723 9.89632ZM17.9771 8.50943C17.9248 8.57388 17.8785 8.64133 17.8381 8.71099L17.5548 8.42763C17.6398 8.37269 17.7192 8.30875 17.7909 8.23708L17.8192 8.20872C18.3788 7.64913 18.3788 6.73872 17.8192 6.17917C17.5482 5.9081 17.1878 5.75875 16.8044 5.75875C16.4211 5.75875 16.0607 5.9081 15.7899 6.17885L15.7613 6.20744C15.6896 6.27911 15.6256 6.35852 15.5707 6.44355L15.2362 6.1091C15.7237 5.82555 16.0421 5.28775 16.0156 4.68644C15.9983 4.29175 16.1367 3.92646 16.4053 3.65791C16.6668 3.39644 17.0244 3.25896 17.4067 3.26777C17.8002 3.27789 18.1746 3.44125 18.4611 3.72775C20.2979 5.5646 17.9994 8.48149 17.9771 8.50943Z" fill="#AB0520" />
                            <path d="M5.98505 5.32182L4.23774 3.57451C4.05464 3.39151 3.75793 3.39151 3.57479 3.57451C3.39174 3.75755 3.39174 4.05437 3.57479 4.23746L5.32214 5.98478C5.41369 6.07628 5.53364 6.12207 5.6536 6.12207C5.77355 6.12207 5.8935 6.07628 5.98505 5.98478C6.1681 5.80173 6.1681 5.50492 5.98505 5.32182Z" fill="#AB0520" />
                            <path d="M7.16339 6.50063C7.07625 6.41344 6.95531 6.36328 6.83203 6.36328C6.7087 6.36328 6.58781 6.41339 6.50062 6.50063C6.41344 6.58786 6.36328 6.70875 6.36328 6.83203C6.36328 6.95578 6.41339 7.07625 6.50062 7.16339C6.58786 7.25105 6.70875 7.30078 6.83203 7.30078C6.95531 7.30078 7.07625 7.25105 7.16339 7.16339C7.25058 7.07625 7.30078 6.95531 7.30078 6.83203C7.30078 6.70875 7.25063 6.58828 7.16339 6.50063Z" fill="#AB0520" />
                            <path d="M4.45562 7.73071C4.45558 7.73071 4.45548 7.73071 4.45544 7.73071L3.05059 7.73132C2.7917 7.73142 2.58194 7.94137 2.58203 8.20026C2.58213 8.45906 2.79198 8.66882 3.05078 8.66882C3.05083 8.66882 3.05092 8.66882 3.05097 8.66882L4.45581 8.66821C4.7147 8.66812 4.92447 8.45817 4.92437 8.19928C4.92428 7.94048 4.71442 7.73071 4.45562 7.73071Z" fill="#AB0520" />
                            <path d="M8.66992 3.05059C8.66983 2.7918 8.45997 2.58203 8.20117 2.58203C8.20113 2.58203 8.20103 2.58203 8.20098 2.58203C7.94214 2.58213 7.73233 2.79208 7.73242 3.05097L7.73303 4.54577C7.73313 4.80456 7.94298 5.01433 8.20178 5.01433C8.20183 5.01433 8.20192 5.01433 8.20197 5.01433C8.46081 5.01424 8.67063 4.80428 8.67053 4.54539L8.66992 3.05059Z" fill="#AB0520" />
                            <path d="M20.4264 19.7615L18.6791 18.0142C18.496 17.8312 18.1993 17.8312 18.0162 18.0142C17.8331 18.1972 17.8331 18.4941 18.0162 18.6772L19.7635 20.4245C19.855 20.516 19.975 20.5618 20.0949 20.5618C20.2149 20.5618 20.3349 20.516 20.4264 20.4245C20.6094 20.2414 20.6094 19.9446 20.4264 19.7615Z" fill="#AB0520" />
                            <path d="M17.4408 16.777C17.3536 16.6899 17.2327 16.6396 17.1094 16.6396C16.9861 16.6396 16.8652 16.6898 16.778 16.777C16.6908 16.8642 16.6406 16.9851 16.6406 17.1084C16.6406 17.2317 16.6908 17.3526 16.778 17.4398C16.8652 17.527 16.9861 17.5771 17.1094 17.5771C17.2327 17.5771 17.3536 17.527 17.4408 17.4398C17.5279 17.3526 17.5781 17.2317 17.5781 17.1084C17.5781 16.9851 17.528 16.8642 17.4408 16.777Z" fill="#AB0520" />
                            <path d="M20.9498 15.3303C20.9497 15.3303 20.9496 15.3303 20.9496 15.3303L19.5447 15.3309C19.2858 15.331 19.0761 15.541 19.0762 15.7999C19.0763 16.0587 19.2861 16.2684 19.5449 16.2684C19.545 16.2684 19.5451 16.2684 19.5451 16.2684L20.95 16.2678C21.2088 16.2677 21.4186 16.0578 21.4185 15.7989C21.4184 15.5401 21.2086 15.3303 20.9498 15.3303Z" fill="#AB0520" />
                            <path d="M16.2676 19.4529C16.2675 19.1941 16.0577 18.9844 15.7988 18.9844C15.7988 18.9844 15.7987 18.9844 15.7986 18.9844C15.5398 18.9845 15.33 19.1944 15.3301 19.4533L15.3307 20.9481C15.3308 21.2069 15.5406 21.4167 15.7994 21.4167C15.7995 21.4167 15.7996 21.4167 15.7996 21.4167C16.0585 21.4166 16.2683 21.2066 16.2682 20.9477L16.2676 19.4529Z" fill="#AB0520" />
                        </g>
                        <defs>
                            <clipPath id="clip0_1717:40680">
                                <rect width="24" height="24" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    <Heading>Popular Emphases</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        return (
                            <div key={degree}>
                                <InfoItem>Health &amp; Wellness</InfoItem>
                                <InfoItem>Business Economics</InfoItem>
                                <InfoItem>Entrepreneurship</InfoItem>
                            </div>
                        )
                    })}
                </MultipleContainer>
            </Row>
            <Row>
                <HeadingContainer $count={props.degrees.length}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <g clipPath="url(#clip0_1717:40725)">
                            <path d="M10.2917 15.3591L11.6579 16.8316C11.7466 16.9272 11.8711 16.9815 12.0015 16.9815C12.1319 16.9815 12.2564 16.9272 12.3451 16.8316L13.7114 15.3591H16.1178C16.7682 15.3591 17.2974 14.8306 17.2974 14.1808V10.0033C17.2974 9.3529 16.7682 8.82373 16.1178 8.82373H7.88533C7.23564 8.82373 6.70703 9.3529 6.70703 10.0033V14.1808C6.70703 14.8305 7.23559 15.3591 7.88533 15.3591H10.2917ZM7.64453 14.1808V10.0033C7.64453 9.87209 7.75483 9.76123 7.88533 9.76123H16.1178C16.249 9.76123 16.3599 9.87209 16.3599 10.0033V14.1808C16.3599 14.3113 16.249 14.4216 16.1178 14.4216H13.507C13.3765 14.4216 13.252 14.476 13.1634 14.5715L12.0016 15.8236L10.8398 14.5715C10.7511 14.476 10.6266 14.4216 10.4962 14.4216H7.88538C7.75483 14.4216 7.64453 14.3113 7.64453 14.1808Z" fill="#AB0520" />
                            <path d="M14.5234 12.5614C14.7823 12.5614 14.9922 12.3515 14.9922 12.0927V12.09C14.9922 11.8312 14.7823 11.6226 14.5234 11.6226C14.2646 11.6226 14.0547 11.8338 14.0547 12.0926C14.0547 12.3515 14.2646 12.5614 14.5234 12.5614Z" fill="#AB0520" />
                            <path d="M12.002 12.5614C12.2608 12.5614 12.4707 12.3515 12.4707 12.0927V12.09C12.4707 11.8312 12.2608 11.6226 12.002 11.6226C11.7431 11.6226 11.5332 11.8338 11.5332 12.0926C11.5332 12.3515 11.7431 12.5614 12.002 12.5614Z" fill="#AB0520" />
                            <path d="M9.48047 12.5614C9.73931 12.5614 9.94922 12.3515 9.94922 12.0927V12.09C9.94922 11.8312 9.73931 11.6226 9.48047 11.6226C9.22163 11.6226 9.01172 11.8338 9.01172 12.0926C9.01172 12.3515 9.22158 12.5614 9.48047 12.5614Z" fill="#AB0520" />
                            <path d="M21.1474 15.6686C21.6159 14.5042 21.8532 13.2725 21.8532 11.9993C21.8532 10.7268 21.6158 9.49547 21.1473 8.33105C21.7411 8.12067 22.286 7.77891 22.7458 7.32005C24.4167 5.64745 24.4167 2.9272 22.7456 1.25606C21.9356 0.446109 20.8586 0 19.7129 0C18.5667 0 17.49 0.446203 16.6817 1.25592C16.2224 1.71483 15.8804 2.25966 15.6701 2.85408C14.5043 2.38486 13.2727 2.1472 12.0013 2.1472C10.7275 2.1472 9.49517 2.38472 8.33019 2.8537C8.12408 2.26992 7.78831 1.72214 7.32228 1.25606C6.51233 0.446109 5.43533 0 4.28966 0C3.14338 0 2.0667 0.446203 1.25844 1.25592C0.448203 2.06545 0.00195312 3.14217 0.00195312 4.28766C0.00195312 5.43305 0.448156 6.51 1.2583 7.32023C1.7172 7.77909 2.26175 8.12091 2.8557 8.33123C2.66581 8.80533 2.51216 9.2947 2.39783 9.79238C2.33989 10.0447 2.49744 10.2962 2.74977 10.3541C2.78506 10.3622 2.82036 10.3661 2.85509 10.3661C3.0687 10.3661 3.26169 10.2192 3.31152 10.0022C3.42584 9.50447 3.584 9.01612 3.78148 8.54536C3.94897 8.56505 4.11842 8.57625 4.28966 8.57625C5.43383 8.57625 6.51074 8.13023 7.32242 7.32C8.28692 6.35461 8.69352 5.04028 8.54459 3.78005C9.638 3.31894 10.799 3.08466 12.0013 3.08466C13.2013 3.08466 14.3616 3.31908 15.456 3.78047C15.4364 3.94763 15.4252 4.1167 15.4252 4.28761C15.4252 5.433 15.8714 6.50995 16.6816 7.32019C17.4916 8.13014 18.5682 8.57625 19.7129 8.57625C19.8841 8.57625 20.0535 8.56505 20.221 8.54536C20.6816 9.63825 20.9157 10.7982 20.9157 11.9992C20.9157 13.2011 20.6816 14.3615 20.221 15.4545C20.0535 15.4348 19.8841 15.4237 19.7129 15.4237C18.5667 15.4237 17.49 15.8699 16.6817 16.6796C15.8714 17.4892 15.4252 18.5659 15.4252 19.7113C15.4252 19.8825 15.4364 20.0519 15.456 20.2194C14.3631 20.6799 13.2028 20.914 12.0012 20.914C10.7989 20.914 9.63795 20.6797 8.5445 20.2186C8.69333 18.9582 8.28674 17.6443 7.32219 16.6798C6.51219 15.8698 5.43519 15.4237 4.28956 15.4237C4.1188 15.4237 3.94986 15.4348 3.7828 15.4544C3.58503 14.9845 3.42683 14.4978 3.31264 14.0027C3.25447 13.7504 3.00275 13.5928 2.75056 13.6513C2.49828 13.7094 2.34097 13.9611 2.39914 14.2133C2.51323 14.7082 2.66684 15.1954 2.85664 15.6681C2.26175 15.8783 1.71683 16.2203 1.25834 16.6796C0.448203 17.4893 0.00195312 18.5659 0.00195312 19.7114C0.00195312 20.8568 0.448156 21.9337 1.2583 22.7439C2.06825 23.5539 3.14478 24 4.28966 24C5.43388 24 6.51083 23.554 7.32242 22.7438C7.78855 22.2772 8.12427 21.7291 8.33038 21.145C9.49531 21.614 10.7276 21.8515 12.0013 21.8515C13.2742 21.8515 14.5059 21.6143 15.6703 21.1458C15.8807 21.7401 16.2226 22.2849 16.6816 22.7439C17.4916 23.5539 18.5681 24 19.7129 24C20.8572 24 21.9341 23.554 22.7458 22.7438C24.4167 21.0712 24.4167 18.3509 22.7456 16.6798C22.2866 16.2208 21.7417 15.879 21.1474 15.6686ZM4.28966 7.6388C4.07413 7.6388 3.86183 7.61808 3.65469 7.57852C3.61822 7.56577 3.58105 7.55836 3.54388 7.55489C3.1602 7.46798 2.79636 7.31433 2.46636 7.09917C2.53658 6.55528 2.84952 6.06731 3.31634 5.77327C3.60392 5.93667 3.93598 6.03047 4.28966 6.03047C4.6437 6.03047 4.97605 5.93658 5.26391 5.77308C5.73031 6.06698 6.04292 6.55514 6.113 7.09941C5.57431 7.45008 4.94628 7.6388 4.28966 7.6388ZM3.24898 4.05098C3.24898 3.47639 3.71581 3.009 4.28961 3.009C4.86416 3.009 5.33159 3.47644 5.33159 4.05098C5.33159 4.62553 4.86416 5.09297 4.28961 5.09297C3.71581 5.09292 3.24898 4.62553 3.24898 4.05098ZM6.8997 6.38916C6.71661 5.88544 6.38961 5.4412 5.95775 5.11462C6.15448 4.80717 6.26909 4.4423 6.26909 4.05098C6.26909 2.9595 5.38114 2.0715 4.28961 2.0715C3.19883 2.0715 2.31148 2.9595 2.31148 4.05098C2.31148 4.44234 2.426 4.80717 2.62264 5.11462C2.19055 5.44111 1.86336 5.88506 1.68003 6.38836C1.20045 5.79469 0.939406 5.06123 0.939406 4.28761C0.939406 3.39272 1.28802 2.55155 1.92144 1.91864C2.55308 1.28597 3.39406 0.9375 4.28966 0.9375C5.18492 0.9375 6.02652 1.28606 6.65938 1.91897C7.87934 3.13898 7.95908 5.07445 6.8997 6.38916ZM4.28966 23.0625C3.63219 23.0625 3.00392 22.8735 2.46561 22.5224C2.53602 21.978 2.84994 21.4905 3.31733 21.1975C3.60472 21.3606 3.93641 21.4542 4.2897 21.4542C4.64338 21.4542 4.97539 21.3605 5.26306 21.1973C5.72998 21.4902 6.04358 21.9779 6.11384 22.5226C5.57492 22.8736 4.94666 23.0625 4.28966 23.0625ZM3.24898 19.4747C3.24898 18.9001 3.71581 18.4327 4.28961 18.4327C4.86416 18.4327 5.33159 18.9001 5.33159 19.4747C5.33159 20.0492 4.86416 20.5167 4.28961 20.5167C3.71581 20.5167 3.24898 20.0493 3.24898 19.4747ZM6.89984 21.8126C6.7167 21.3088 6.39008 20.8642 5.95784 20.5382C6.15453 20.2307 6.26909 19.866 6.26909 19.4747C6.26909 18.3832 5.38114 17.4952 4.28961 17.4952C3.19883 17.4952 2.31148 18.3832 2.31148 19.4747C2.31148 19.866 2.426 20.2307 2.6225 20.5382C2.19013 20.8641 1.86327 21.3084 1.67989 21.8119C1.20041 21.2183 0.939453 20.4849 0.939453 19.7114C0.939453 18.8165 1.28806 17.9753 1.92148 17.3424C2.55313 16.7097 3.39411 16.3612 4.28966 16.3612C5.18488 16.3612 6.02647 16.7098 6.65938 17.3427C7.87925 18.5626 7.95903 20.498 6.89984 21.8126ZM17.1034 6.38841C16.6238 5.79473 16.3627 5.06128 16.3627 4.28766C16.3627 3.39277 16.7113 2.55159 17.3448 1.91869C17.9764 1.28597 18.8174 0.9375 19.7129 0.9375C20.6082 0.9375 21.4498 1.28606 22.0827 1.91897C23.3027 3.13898 23.3824 5.07459 22.3229 6.3893C22.1398 5.88572 21.8134 5.44088 21.3813 5.1142C21.5779 4.80684 21.6924 4.44211 21.6924 4.05094C21.6924 2.95945 20.8045 2.07145 19.7129 2.07145C18.6222 2.07145 17.7348 2.95945 17.7348 4.05094C17.7348 4.44202 17.8492 4.80666 18.0456 5.11397C17.6133 5.4405 17.2867 5.88502 17.1034 6.38841ZM20.7549 4.05098C20.7549 4.62553 20.2874 5.09297 19.7129 5.09297C19.1391 5.09297 18.6723 4.62553 18.6723 4.05098C18.6723 3.47639 19.1391 3.009 19.7129 3.009C20.2875 3.00895 20.7549 3.47639 20.7549 4.05098ZM19.7129 7.6388C19.0558 7.6388 18.4278 7.44998 17.8896 7.09912C17.9599 6.55523 18.2728 6.06736 18.7398 5.77336C19.0274 5.93667 19.3593 6.03047 19.7129 6.03047C20.0668 6.03047 20.399 5.93667 20.6869 5.77327C21.1535 6.06745 21.4662 6.55547 21.5363 7.09941C20.9975 7.45008 20.3696 7.6388 19.7129 7.6388ZM19.7129 23.0625C19.0558 23.0625 18.4278 22.8737 17.8896 22.5228C17.9599 21.9784 18.2731 21.4905 18.7406 21.1975C19.028 21.3606 19.3596 21.4542 19.7129 21.4542C20.0665 21.4542 20.3985 21.3606 20.6861 21.1974C21.1532 21.4907 21.4662 21.9786 21.5363 22.5232C20.9976 22.8738 20.3696 23.0625 19.7129 23.0625ZM18.6723 19.4747C18.6723 18.9001 19.1391 18.4327 19.7129 18.4327C20.2875 18.4327 20.7549 18.9001 20.7549 19.4747C20.7549 20.0492 20.2875 20.5167 19.7129 20.5167C19.1391 20.5167 18.6723 20.0493 18.6723 19.4747ZM22.323 21.813C22.1398 21.3092 21.8133 20.8646 21.381 20.5384C21.5778 20.2309 21.6924 19.866 21.6924 19.4747C21.6924 18.3832 20.8045 17.4952 19.7129 17.4952C18.6222 17.4952 17.7348 18.3832 17.7348 19.4747C17.7348 19.866 17.8493 20.2307 18.0459 20.5382C17.6135 20.8642 17.2867 21.3085 17.1033 21.8121C16.6238 21.2184 16.3627 20.485 16.3627 19.7114C16.3627 18.8165 16.7113 17.9753 17.3448 17.3424C17.9765 16.7097 18.8174 16.3612 19.7129 16.3612C20.6082 16.3612 21.4498 16.7098 22.0827 17.3427C23.3027 18.5627 23.3824 20.4982 22.323 21.813Z" fill="#AB0520" />
                            <path d="M3.08594 12.0021V11.9994C3.08594 11.7405 2.87603 11.532 2.61719 11.532C2.35834 11.532 2.14844 11.7432 2.14844 12.002C2.14844 12.2609 2.35834 12.4708 2.61719 12.4708C2.87603 12.4708 3.08594 12.2609 3.08594 12.0021Z" fill="#AB0520" />
                        </g>
                        <defs>
                            <clipPath id="clip0_1717:40725">
                                <rect width="24" height="24" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    <Heading>Core Competences</Heading>
                </HeadingContainer>
                <MultipleContainer $count={props.degrees.length}>
                    {props.degrees.map(degree => {
                        return (
                            <div key={degree}>
                                <InfoItem>Communication</InfoItem>
                                <InfoItem>Developmental Stages</InfoItem>
                                <InfoItem>Instructional Design</InfoItem>
                                <InfoItem>Mathematics</InfoItem>
                            </div>
                        )
                    })}
                </MultipleContainer>
            </Row> */}

            <ActionsContainer $count={props.degrees.length}>
                {props.degrees.map(degree => {

                    const thisDegreeMeta = degreeExtraMeta(degree);

                    if (thisDegreeMeta) {
                        return (
                            <div key={degree}>
                                <RequestInformation href='/request-information'>Request Information</RequestInformation>
                                <DiscoverDegree href={thisDegreeMeta.link}>Discover Degree</DiscoverDegree>
                            </div>
                        )
                    } else {
                        return (
                            <div key={degree} >
                                <RequestInformation href='/request-information'>Request Information</RequestInformation>
                            </div>
                        )
                    }
                })}
            </ActionsContainer>

        </Container>
    )
}