# Required environmental variables should be set via the CircleCI web interface:
#
# - ACQUIA_USER
#     Cloud API E-mail
# - ACQUIA_TOKEN
#     Cloud API Private key. Located in your profile under security.
#     See: https://docs.acquia.com/acquia-cloud/api/auth
# - ACQUIA_REPO
#     Acquia git repo url.
# - ACQUIA_BOT_EMAIL
#     Email used to commit deployment commits.
# - ACQUIA_BOT_NAME
#     Display name use for the deployment committer.

version: 2
defaults: &defaults
  docker:
    # Using the most up to date local image
    - image: domain7reuben/docker-lamp-ci:0.0.1
      environment:
        DATE_TIMEZONE: America/Vancouver
        TERM: xterm
        ACQUIA_CANONICAL_ENV: dev2
        ACQUIA_REPO: '' # surreymain@svn-26357.prod.hosting.acquia.com:surreymain.git
        ACQUIA_BOT_EMAIL: ops@domain7.com
        ACQUIA_BOT_NAME: "Domain7 Ops"
        CI: TRUE
  working_directory: ~/project

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "add vendor/bin to path"
          command: |
            echo 'export PATH=/root/project/vendor/bin:$PATH' >> $BASH_ENV
      - run: service mysql start
      - run: composer install
      - run: mkdir -p /root/.ssh && ssh-keyscan -H surreymaindev2.ssh.prod.acquia-sites.com >> ~/.ssh/known_hosts
      - run: cp .circleci/settings.local.php ./docroot/sites/default/settings/ci.settings.php
      - run: cp .circleci/settings.local.php ./docroot/sites/default/settings/local.settings.php
      # To execute PHP codesniffer and PHP lint against the project codebase
      # removed validate:all - new version of blt runs drupal-check which has too many fails
      # - run: blt -vvv -n validate:all
      - run: blt blt:telemetry:disable --no-interaction
      - run: blt -vvv -n validate
      - run: blt -vvv status
      # Do the necessary setup stuff
      # Disable setup (we do not need to install drupal in CI if we are syncing the bd). run source:build instead
      # - run: blt -vvv setup -n
      - run: blt -vvv source:build
      # Checking to see if data has been sanitized on Staging before syncing. Build will fail if the data has not been sanitized.
      - run: drush -vvv @surreymain.$ACQUIA_CANONICAL_ENV user:information --mail=user+1@localhost.localdomain
      # Make sure site is in sync with the remote site
      - run: echo "Syncing database $ACQUIA_CANONICAL_ENV..."
      - run:
          name: Database sync
          no_output_timeout: 20m
          command: blt -vvv drupal:sync:db
      - run: drush -vvv cr && drush -vvv sqlq "TRUNCATE cache_entity";
      - run: blt -vvv drupal:update
      - run: drush pm:uninstall shield --yes
      - run: drush pm:uninstall shield_agent --yes
      - run: drush cr -vvv
      - run: echo "Run tests"
      - run: drush -vvv @self st
      - run: sudo echo '127.0.0.1       project.local' >> /etc/hosts
      - run: service apache2 start
      - run: chown -R root:www-data ./docroot
      - run: curl -s project.local | grep '<div class="region region-content">'
  deploy-master:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "add vendor/bin to path"
          command: |
            echo 'export PATH=/root/project/vendor/bin:$PATH' >> $BASH_ENV
      - run: composer install
      - run: ssh-keyscan -H $(echo "$ACQUIA_REPO" | sed 's/.*@\(.*\):.*/\1/') >> ~/.ssh/known_hosts
      - run: git config --global user.email "$ACQUIA_BOT_EMAIL"
      - run: git config --global user.name "$ACQUIA_BOT_NAME"
#      - run: blt -vvv artifact:deploy --commit-msg "COS-000:Deploy to branch $CIRCLE_BRANCH-build" --branch "$CIRCLE_BRANCH" --no-interaction
  deploy-release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "add vendor/bin to path"
          command: |
            echo 'export PATH=/root/project/vendor/bin:$PATH' >> $BASH_ENV
      - run: composer install
      - run: ssh-keyscan -H $(echo "$ACQUIA_REPO" | sed 's/.*@\(.*\):.*/\1/') >> ~/.ssh/known_hosts
      - run: git config --global user.email "$ACQUIA_BOT_EMAIL"
      - run: git config --global user.name "$ACQUIA_BOT_NAME"
      - run: blt -vvv artifact:deploy --commit-msg "Creating release $CIRCLE_TAG" --tag "$CIRCLE_TAG" --no-interaction
workflows:
  version: 2
  build-deploy-release:
    jobs:
      - build: # job runs for all branches and all tags
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - deploy-master:  # job runs for master branch only.
          requires:
          #- build
          filters:
            branches:
              only:
                - master
                - drupal-9-upgrade
                - release/v2.0.0
                - up-and-up
      - deploy-release:  # job runs for no branches and only for tags matching SMV.
          requires:
          #- build
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
